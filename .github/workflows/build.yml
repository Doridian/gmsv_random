name: Build

on: [push]

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        id: create_release

  build_windows:
    needs: [create_release]
    runs-on: windows-latest
    strategy:
      matrix:
        triplet: [x86-windows, x64-windows]
    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
    steps:
      - uses: actions/checkout@v3
      - uses: lukka/get-cmake@v3.26.4
      - uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: c9f906558f9bb12ee9811d6edc98ec9255c6cda5
      - uses: lukka/run-cmake@v10
        with:
          configurePreset: ninja-multi-vcpkg
          buildPreset: ninja-multi-vcpkg
          buildPresetAdditionalArgs: "['--config Release']"
      - name: Upload release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          fail_on_unmatched_files: true
          files: "builds/ninja-multi-vcpkg/bin/release/*.dll"

  build_linux:
    needs: [create_release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: |
          set -ex

          mkdir out
          sudo apt-get -y install gcc-multilib g++-multilib cmake

          runbuild() {
            mkdir build
            pushd build
            cmake ..
            make -j$(nproc)
            mv module/*.dll ../out
            popd
            rm -rf build
          }

          export CFLAGS="-s -flto -O2"
          export CXXFLAGS="${CFLAGS}"
          export LDFLAGS="${CFLAGS}"
          runbuild
          export CFLAGS="-s -flto -O2 -m32"
          export CXXFLAGS="${CFLAGS}"
          export LDFLAGS="${CFLAGS}"
          runbuild
      - name: Upload release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          fail_on_unmatched_files: true
          files: "out/*.dll"

  build_macos:
    needs: [create_release]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: |
          set -ex

          export CFLAGS="-s -flto -O2"
          export CXXFLAGS="${CFLAGS}"
          export LDFLAGS="${CFLAGS}"
          mkdir -p build
          pushd build
          cmake ..
          make -j$(nproc)
          popd
      - name: Upload release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          fail_on_unmatched_files: true
          files: "build/module/*.dll"
